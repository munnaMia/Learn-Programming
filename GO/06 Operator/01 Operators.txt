Operator : In computer programming, an operator is a symbol that represents a specific mathematical or logical action or process. Operators are fundamental constructs in programming languages that allow the manipulation of values and variables.
Example : +, -, /, *, %, ==, --, ++

Operand : An operand is a value or expression that is used to perform an operation. It is an object or data that is manipulated by an operator.
Example : a, b, x, y, a number, string value. like : 23+34, "hell" + "o"


Go operators groups:
====================
    >> Arithmetic operators - This are used to perform any mathematical task.
    >> Assignment operators - This are used to assign values into variables.
    >> Comparison operators - This are used to compare two values.
    >> Logical operators - This are used to implement the logic between variables or values.
    >> Bitwise operators - This are used to perfrom bitwise operation.


Arithmetic Operator :
=====================
    01. +    Addtion         --> Add two or more values (it can be a string or number)   "name :" + "munna" OR 56+4
    02. -    Subtraction     --> Subtracts two or more values    454-56
    03. *    Multiplication  --> Multiplies  two or more values   90*34*34
    04. /    Division        --> Divides two values  34/23
    05. %    Modulus         --> Returns the division remainder  10%3
    06. ++   Increment       --> Increases value by 1  4++ = 5  
    07. --   Decrement       --> Decreases value by 1  4-- = 3

Assignment Operator :
=====================
    01. =   --> x = 5   --> x = 5
    02. +=  --> x += 5  --> x = x + 5
    03. -=  --> x -= 5  --> x = x - 5
    04. *=  --> x *= 5  --> x = x * 5
    05. /=  --> x /= 5  --> x = x / 5
    06. %=  --> x %= 5  --> x = x % 5
    07. &=  --> x &= 5  --> x = x & 5
    08. |=  --> x |= 5  --> x = x | 5
    09. ^=  --> x ^= 5  --> x = x ^ 5
    10. >>= --> x >>= 5 --> x = x >> 5
    11. <<= --> x <<= 5 --> x = x << 5

Comparison Operator :
=====================
    01. ==	--> Equal to                    ----> x == y	
    02. !=	--> Not equal                   ----> x != y	
    03. >	--> Greater than                ----> x > y	
    04. <	--> Less than                   ----> x < y	
    05. >=	--> Greater than or equal to    ----> x >= y	
    06. <=	--> Less than or equal to       ----> x <= y

Logical Operator :
==================
    01. && 	--> Logical and 	Returns true when (both statements are true)        --> x < 5 &&  x < 10	
    02. || 	--> Logical or  	Returns true when (one of the statements is true)   --> x < 5 || x < 4	
    03. !	--> Logical not 	Reverse the result (if result is false return true) --> !(x < 5 && x < 10)

Bitwise Operator :
==================
    0. & 	--> AND	    --> Set each bit to 1 if all the bits are 1	                --> x & y	
    0. |	--> OR	    --> Set each bit to 1 if one of random amounts of bits is 1	--> x | y	
    0. ^	--> XOR	    --> Set each bit to 1 if only one of two bits is 1	        --> x ^ b	
    0. <<	--> Zero    --> Pushing zeros in from the right	                        --> x << 2	
    0. >>	--> Signed  --> Pushing copies of the leftmost bit in from the left     --> x >> 2